---

# Project source code URL: https://github.com/WordPress/WordPress/

wordpress_enabled: true
wordpress_identifier: wordpress

# The hostname at which Wordpress is served.
wordpress_hostname: ''

wordpress_uid: ''
wordpress_gid: ''

# renovate: datasource=docker depName=wordpress versioning=semver
wordpress_version: 6.6.2

wordpress_base_path: "/{{ wordpress_identifier }}"
wordpress_config_path: "{{ wordpress_base_path }}/config"
wordpress_data_path: "{{ wordpress_base_path }}/data"
wordpress_env_path: "{{ wordpress_config_path }}/env"
wordpress_uploads_config_location: "{{ wordpress_config_path }}/uploads.ini"

wordpress_systemd_required_services_list: "{{ wordpress_systemd_required_services_list_default + wordpress_systemd_required_services_list_auto + wordpress_systemd_required_services_list_custom }}"
wordpress_systemd_required_services_list_default: ['docker.service']
wordpress_systemd_required_services_list_auto: []
wordpress_systemd_required_services_list_custom: []

wordpress_systemd_wanted_services_list: "{{ wordpress_systemd_wanted_services_list_default + wordpress_systemd_wanted_services_list_auto + wordpress_systemd_wanted_services_list_custom }}"
wordpress_systemd_wanted_services_list_default: []
wordpress_systemd_wanted_services_list_auto: []
wordpress_systemd_wanted_services_list_custom: []

wordpress_container_labels_middleware_basic_auth_enabled: false
# Use `htpasswd -nb USERNAME PASSSWORD` to generate the users below.
# See: https://doc.traefik.io/traefik/middlewares/http/basicauth/#users
wordpress_container_labels_middleware_basic_auth_users: ''

wordpress_max_upload_size: '64M'

wordpress_container_image: "{{ wordpress_container_image_registry_prefix }}wordpress:{{ wordpress_container_image_tag }}"
wordpress_container_image_registry_prefix: docker.io/
wordpress_container_image_tag: "{{ wordpress_version }}"
wordpress_container_image_force_pull: "{{ wordpress_container_image.endswith(':latest') }}"

wordpress_container_network: '{{ wordpress_identifier }}'

# The port number in the container
wordpress_container_http_port: 80

# Controls whether the wordpress container exposes its HTTP port (as defined by `wordpress_container_http_port`).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:8731"), or empty string to not expose.
wordpress_container_http_host_bind_port: ""

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to a reverse proxy, which runs in a different container network.
wordpress_container_additional_networks: "{{ wordpress_container_additional_networks_auto + wordpress_container_additional_networks_custom }}"
wordpress_container_additional_networks_auto: []
wordpress_container_additional_networks_custom: []

wordpress_database_hostname: ''
wordpress_database_port: 3306
wordpress_database_name: wordpress
wordpress_database_username: wordpress
wordpress_database_password: ''

# Set to 1 to enable debug mode (!security risk!)
wordpress_debug: 0

# Additional environment variables to pass to the wordpress container.
# You can use this to further influence the default configuration.
wordpress_environment_variables_extension: ''

# wordpress_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `roles/custom/wordpress_wordpress/templates/labels.j2` for details.
#
# To inject your own other container labels, see `wordpress_container_labels_additional_labels`.
wordpress_container_labels_traefik_enabled: false
wordpress_container_labels_traefik_docker_network: ""
wordpress_container_labels_traefik_entrypoints: web-secure
wordpress_container_labels_traefik_priority: 0
wordpress_container_labels_traefik_tls: "{{ wordpress_container_labels_traefik_entrypoints != 'web' }}"
wordpress_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP requests.
# To add your own custom request headers, use `wordpress_container_labels_traefik_additional_response_headers_custom`
wordpress_container_labels_traefik_additional_request_headers: "{{ wordpress_container_labels_traefik_additional_request_headers_auto | combine(wordpress_container_labels_traefik_additional_request_headers_custom) }}"
wordpress_container_labels_traefik_additional_request_headers_auto: {}
wordpress_container_labels_traefik_additional_request_headers_custom: {}


# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `wordpress_container_labels_traefik_additional_response_headers_custom`
wordpress_container_labels_traefik_additional_response_headers: "{{ wordpress_container_labels_traefik_additional_response_headers_auto | combine(wordpress_container_labels_traefik_additional_response_headers_custom) }}"
wordpress_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': wordpress_http_header_xss_protection} if wordpress_http_header_xss_protection else {})
    | combine ({'X-Frame-Options': wordpress_http_header_frame_options} if wordpress_http_header_frame_options else {})
    | combine ({'X-Content-Type-Options': wordpress_http_header_content_type_options} if wordpress_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': wordpress_http_header_content_security_policy} if wordpress_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': wordpress_http_header_content_permission_policy} if wordpress_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': wordpress_http_header_strict_transport_security} if wordpress_http_header_strict_transport_security and wordpress_container_labels_traefik_tls else {})
  }}
wordpress_container_labels_traefik_additional_response_headers_custom: {}

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
wordpress_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Frame-Options` header which controls whether framing can happen.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
wordpress_http_header_frame_options: SAMEORIGIN

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
wordpress_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
wordpress_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
wordpress_http_header_content_permission_policy: "{{ 'interest-cohort=()' if wordpress_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
wordpress_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if wordpress_hsts_preload_enabled else '' }}"

# Controls whether to send a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `wordpress_content_permission_policy`
wordpress_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `wordpress_http_header_strict_transport_security`
wordpress_hsts_preload_enabled: false


# wordpress_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `roles/custom/collabora_online/templates/labels.j2` for details.
#
# Example:
# wordpress_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
wordpress_container_labels_additional_labels: ''
